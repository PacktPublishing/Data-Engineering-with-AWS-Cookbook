import sys
from awsglue.transforms import *
from awsglue.utils import getResolvedOptions
from pyspark.context import SparkContext
from awsglue.context import GlueContext
from awsglue.job import Job
from awsgluedq.transforms import EvaluateDataQuality

#Create Glue context
sc = SparkContext()
glueContext = GlueContext(sc)
spark = glueContext.spark_session
job = Job(glueContext)



df_planet = glueContext.create_dynamic_frame.from_options(
    connection_type="s3",
    connection_options={
        "paths": ["s3://sample-test-wf09/star_wars_characters.csv"],
        "recurse": True,
    },
    format="csv"
)

df_species_catagory = glueContext.create_dynamic_frame.from_options(
    connection_type="s3",
    connection_options={
        "paths": ["s3://sample-test-wf09/star_wars_characters.csv"],
        "recurse": True,
    },
    format="csv"
)

EvaluateDataQualityProcessRows_nodeoutput_ruleset = """
    Rules = [RowCount = 42,
             ReferentialIntegrity "planet" "planet.homeworldname" = 1, 
             ReferentialIntegrity " species_catagory" "species_catagory. speciestype" = 1]
"""

EvaluateDataQuality_additional_sources = {
    "planet": df_weapon,
    "species_catagory": df_species_catagory
}
