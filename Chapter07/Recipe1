import sys
from awsglue.transforms import *
from awsglue.utils import getResolvedOptions
from pyspark.context import SparkContext
from awsglue.context import GlueContext
from awsglue.job import Job
from awsgluedq.transforms import EvaluateDataQuality

#Create Glue context
sc = SparkContext()
glueContext = GlueContext(sc)
spark = glueContext.spark_session
job = Job(glueContext)
#create df homeworld, make sure you use a relavant dataset and your s3 bucket 
df_homeworld= glueContext.create_dynamic_frame.from_options(format_options={"quoteChar": "\"", "withHeader": True, "separator": ","}, connection_type="s3", format="csv", connection_options={"paths": ["s3://sample-test-wf09/csv/star_wars_characters.csv"], "recurse": True}, transformation_ctx=" df_weapon")

#create df species, make sure you use a relavant dataset and your s3 bucketplanet 
df_planet = glueContext.create_dynamic_frame.from_options(format_options={"quoteChar": "\"", "withHeader": True, "separator": ","}, connection_type="s3", format="csv", connection_options={"paths": ["s3://sample-test-wf09/csv/star_wars_characters.csvs3://sample-test/csv/star_wars_planets.csv"], "recurse": True}, transformation_ctx=" df_planet")

EvaluateDataQualityProcessRows_nodeoutput_ruleset = """
    Rules = [RowCount = 42,
             ReferentialIntegrity "home_planet" "planet.name" = 1, 
             ReferentialIntegrity "preferred_weapon" "weapon.type" = 1]
"""
