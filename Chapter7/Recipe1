import sys
from awsglue.transforms import *
from awsglue.utils import getResolvedOptions
from pyspark.context import SparkContext
from awsglue.context import GlueContext
from awsglue.job import Job
from awsgluedq.transforms import EvaluateDataQuality

args = getResolvedOptions(sys.argv, ['JOB_NAME'])
#Create Glue context
sc = SparkContext()
glueContext = GlueContext(sc)
spark = glueContext.spark_session
job = Job(glueContext)
1.4.	Create DynamicFrame from the dataset on your S3 bucket. For various scenarios in this recipe, we will create 2 two DynamicFrames as the belowshown:
# weapon dataset
df_weapon = glueContext.create_dynamic_frame.from_options(format_options={"quoteChar": "\"", "withHeader": True, "separator": ","}, connection_type="s3", format="csv", connection_options={"paths": ["s3://sample-test/csv/star_wars_characters.csv"], "recurse": True}, transformation_ctx=" df_weapon")

# planet dataset
df_planet = glueContext.create_dynamic_frame.from_options(format_options={"quoteChar": "\"", "withHeader": True, "separator": ","}, connection_type="s3", format="csv", connection_options={"paths": ["s3://sample-test/csv/star_wars_planets.csv"], "recurse": True}, transformation_ctx=" df_planet")
